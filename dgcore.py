from corerd import corerd
from numba import njit


# 确定两个简并核碰撞或并合的结果
# Entered with kw1,kw2 = 2 or 3 with M <= Mflash, 6, 10, 11 or 12
@njit
def dgcore(kw1, kw2, kw3, m1, m2, m3, ebinde):
    # 设置常数
    cvhe = 3.1e+07
    cvc = 8.27e+06
    cvne = 7.44e+06
    ehe = 5.812e+17
    ec = 2.21e+17
    ene = 2.06e+17
    the = 1.0e+08
    tc = 1.0e+09
    gmr = 1.906e+15
    mch = 1.440

    # Calculate the core radii setting m0 < mflash using dummy values as we know it to be true if kw = 2 or 3.
    m0 = 1.0
    mflash = 2.0
    r1 = corerd(kw1, m1, m0, mflash)
    r2 = corerd(kw2, m2, m0, mflash)
    r3 = corerd(kw3, m3, m0, mflash)

    # Calculate the initial binding energy of the two seperate cores and the
    # difference between this and the final binding energy of the new core.
    ebindi = m1 * m1 / r1 + m2 * m2 / r2
    ebindf = m3 * m3 / r3
    deleb = abs(ebindi - ebindf)

    # If an envelope is present reduce its binding energy by the amount of energy liberated by the coalescence.
    ebinde = max(0.0, ebinde - deleb)

    if kw1 <= 3:
        # Distribute the mass into core mass groups where mhe represents Helium core mass, mc represents
        # Carbon core mass and mne represents a Neon core mass or any mass that is all converted Carbon.
        mhe = 0.0
        mc = 0.0
        mne = 0.0
        if kw1 <= 3 or kw1 == 10:
            mhe = mhe + m1
        elif kw1 == 12:
            mne = mne + m1
        else:
            mc = mc + m1
        if kw2 <= 3 or kw2 == 10:
            mhe = mhe + m2
        elif kw2 == 12:
            mne = mne + m2
        else:
            mc = mc + m2
        # Calculate the temperature generated by the merging of the cores.
        temp = (deleb / (cvhe * mhe + cvc * mc + cvne * mne)) * gmr
        x = 1.0
        y = 0.0
        # Calculate the nuclear energy generated from any element conversion.
        enuc = (x * ehe * mhe + y * (ec * mc + ene * mne)) / gmr
        # Calculate the difference between the binding energy of the star (core + envelope) and the nuclear energy.
        # The new star will be destroyed in a SN if dE < 0.
        de = (ebindf + ebinde) - enuc
        # If the star survives and an envelope is present then reduce the
        # envelope binding energy by the amount of liberated nuclear energy.
        # The envelope will not survive if its binding energy is reduced to <= 0.
        if de >= 0.0:
            ebinde = max(0.0, ebinde - enuc)
        # Now determine the final evolution state of the merged core.
        if de < 0.0:
            kw3 = 15
        if kw3 == 3:
            if x > 0.5:
                kw3 = 6
            elif ebinde <= 0.0:
                kw3 = 10
        elif kw3 == 4:
            if x > 0.5:
                kw3 = 6
            elif ebinde <= 0.0:
                kw3 = 7
        if kw3 == 6 and y < 0.50:
            if ebinde <= 0.0:
                kw3 = 11
        elif kw3 == 6 and y > 0.50:
            if ebinde <= 0.0:
                kw3 = 12
        if kw3 == 10 and x > 0.50:
            kw3 = 11
        if kw3 == 11 and y > 0.50:
            kw3 = 12
        if 10 <= kw3 <= 12 and m3 >= mch:
            kw3 = 15
        if kw3 == 15:
            m3 = 0.0

    return kw1, kw2, kw3, m1, m2, m3, ebinde



